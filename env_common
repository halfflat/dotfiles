typeset -x LC_COLLATE=C

if type gcc >&/dev/null; then
    typeset -x TARGET_TRIPLET=$(gcc -dumpmachine)
elif type clang >&/dev/null; then
    typeset -x TARGET_TRIPLET=$(clang -dumpmachine)
fi

archpfx="${TARGET_TRIPLET}${TARGET_TRIPLET:+/}"
archsfx="${TARGET_TRIPLET:+/}${TARGET_TRIPLET}"
typeset -x XDG_BIN_HOME="$HOME/.local/${archpfx}bin"

typeset -x PATH="$HOME/bin:$HOME/bin${archsfx}:$HOME/pkg/bin:$HOME/pkg/${archpfx}bin:$XDG_BIN_HOME:/opt/local/bin${PATH:+:}$PATH"
typeset -x MANPATH="$HOME/man:$HOME/pkg/man:$HOME/pkg/share/man:/opy/local/share/man${MANPATH:+:}$MANPATH"

typeset -x CPATH="$HOME/pkg/include:/opt/local/include${CPATH:+:}$CPATH"
typeset -x LIBRARY_PATH="$HOME/pkg/lib:/opt/local/lib${LIBRARY_PATH:+:}$LIBRARY_PATH"
typeset -x LD_LIBRARY_PATH="$HOME/pkg/${archpfx}lib:/opt/local/lib${LD_LIBRARY_PATH:+:}$LD_LIBRARY_PATH"

typeset -x TEXINPUTS=".:$HOME/share/texmf//:$HOME/pkg/share/texmf//:/opt/local/share/texmf//"
typeset -x BSTINPUTS"=.:$HOME/share/texmf//:$HOME/pkg/share/texmf//:/opt/local/share/texmf//"

typeset -x PYTHONSTARTUP="$HOME/.pythonrc"
# typeset -x PYTHONPATH="$HOME/pkg/lib/python3.7/site-packages:$HOME/pkg/lib/python2.7/site-packages"

typeset -x HISTTIMEFORMAT='%F %H:%M:%S '

if type nvim >&/dev/null; then
    typeset -x VISUAL=nvim
elif type vim >&/dev/null; then
    typeset -x VISUAL=vim
fi

umask 007

pathuniq () {
    local IFS=:
    if [ -n "$ZSH_VERSION" ]; then
        local -aU q
        q=(${=1})
    elif [ -n "$BASH_VERSION" ] && [ "${BASH_VERSION%%.*}" -gt 3 ]; then
        local -a p=($1) q
        local -A s
        for k in "${p[@]}"; do
            if [ -n "$k" ]; then
                if [ ! ${s[$k]+_} ]; then q+=("$k"); fi
                s[$k]=1
            fi
        done
    else
        local -a q=($1)
    fi
    echo "${q[*]}"
}

# Explicitly keep ':' on end of MANPATH to include default path.
typeset -x MANPATH=$(pathuniq "$MANPATH"):
typeset -x PATH=$(pathuniq "$PATH")
typeset -x PYTHONPATH=$(pathuniq "$PYTHONPATH")

typeset -x CPATH=$(pathuniq "$CPATH")
typeset -x LIBRARY_PATH=$(pathuniq "$LIBRARY_PATH")
typeset -x LD_LIBRARY_PATH=$(pathuniq "$LD_LIBRARY_PATH")

if [ -n "$ZSH_VERSION" ]; then
    function = () {
        if [[ $# -ne 0 ]]; then dirs "$@";
        else dirs -v;
        fi;
    }
    
    function - () {
        if [[ $# -eq 0 ]]; then
            popd;
        elif [[ $# -eq 1 && "$1" =~ ^[0-9]+$ ]]; then
            repeat $1 { popd -q };
        else
            pushd "${@}";
        fi;
    }
else
    function = () {
        if [[ $# -ne 0 ]]; then
            for ((n=$#;n>0;--n)) do pushd -n "${@:$n:1}" >/dev/null; done
        else dirs -v;
        fi;
    }
    
    function - () {
        if [[ $# -eq 0 ]]; then
            popd;
        elif [[ $# -eq 1 && "$1" =~ ^[0-9]+$ ]]; then
            for ((n=0;n<$1;++n)) do popd -q; done;
        else
            pushd "${@}";
        fi;
    }
fi

function + () {
    if [[ $# -eq 0 ]]; then
        pushd;
    elif [[ $# -eq 1 && "$1" =~ ^[0-9]+$ ]]; then
        pushd +$1;
    else
        pushd "${@}";
    fi;
}
    

